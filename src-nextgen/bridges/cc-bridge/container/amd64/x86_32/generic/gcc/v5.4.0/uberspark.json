/*
    uberSpark code bridges json definition
*/

{
		"uberspark.manifest.namespace" : [ "uberspark-bridge-cc" ],
		"uberspark.manifest.version_min" : "any",
		"uberspark.manifest.version_max" : "any",

    "uberspark-bridge-cc" : {
		/* bridge header */
		"bridge-hdr":{
			"category" : "container",
			"name" : "gcc",
			"executable_name" : "gcc",
			"dev_environment" : "amd64",
			"arch" : "x86_32",
			"cpu" : "generic",
			"version" : "v5.4.0",
			"path" : ".",
			"parameters" : [ 
				"-nostdinc",
			    "-nostdlib",
           	    "-nostartfiles",
				"-ffreestanding",
				"-m32" 
			],
			"container_filename" : "uberspark_bridges.Dockerfile"
		},

		"params_prefix_obj" : "-c",
        "params_prefix_asm" : "-S",
        "params_prefix_output" : "-o",
		"params_prefix_include" : "-I",
		"params_cclib" : "/usr/lib/gcc/x86_64-linux-gnu/5/32/libgcc.a",
		"bridge_cmd" : [
			"export var_bridge_include_dirs_with_prefix",
			"export var_bridge_input_files",
			"var_bridge_include_dirs_with_prefix=\" @@BRIDGE_INCLUDE_DIRS_WITH_PREFIX@@ \"",
			"var_bridge_input_files=\" @@BRIDGE_INPUT_FILES@@ \"",
			"vararray_bridge_input_files=$(echo $var_bridge_input_files | tr \" \" \"\\n\")",
			"for input_file_name in $vararray_bridge_input_files; do echo \"Compiling ${input_file_name} ...\" && gcc @@BRIDGE_DEFS_WITH_PREFIX@@ -nostdinc -nostdlib -nostartfiles -ffreestanding -m32 -c ${var_bridge_include_dirs_with_prefix} ${input_file_name} -o ${input_file_name}.o ; done",
			"cp -f /usr/lib/gcc/x86_64-linux-gnu/5/32/libgcc.a @@BRIDGE_CONTAINER_MOUNT_POINT@@/cclib.a"
		] 


	}

}
