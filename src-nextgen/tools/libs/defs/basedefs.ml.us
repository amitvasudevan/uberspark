(*
	uberSpark global type definitions
	author: amit vasudevan (amitvasudevan@acm.org)
*)


		(* from usbinformat.h *)
		type usbinformat_section_info_t =
			{
				mutable f_type         : int;			
				mutable f_prot         : int;			
				mutable f_size         : int;
        		mutable f_aligned_at   : int;
	      		mutable f_pad_to       : int;
				mutable f_addr_start   : int;
				mutable f_addr_file    : int;
        		mutable f_reserved     : int; 
			};;


		(* local type definitions *)
		type target_def_t = 
			{
				mutable platform: string;
				mutable arch : string;
				mutable cpu : string;
			};;
		

		type section_info_t = 
			{
				mutable fn_name: string;
				mutable f_subsection_list : string list;
				mutable usbinformat : usbinformat_section_info_t;
			};;

			


		type uobjcoll_sentineltypes_t = 
			{
				s_type: string;
				s_type_id : string;
			};;

		type uobjcoll_exitcallee_t = 
			{
				s_retvaldecl : string;
				s_fname: string;
				s_fparamdecl: string;
				s_fparamdwords : int;
			};;


type uobjinfo_t =
{
	mutable f_uobj_name    			: string;			
	mutable uobj_namespace				: string;
	mutable f_uobj_srcpath	   		: string;	(* path where uobj sources reside *)
	mutable f_uobj_buildpath 		: string;	(* path where uobj sources are copied for build *)
	mutable f_uobj_nspath 			: string; 	(* path for uobj namsepace *)
	mutable f_uobj_is_incollection 	: bool;
	mutable f_uobj_is_prime 	   	: bool;
	mutable f_uobj_load_address		: int;
	mutable f_uobj_size				: int;
};;

type uobjcoll_sentinel_address_t = 
{
	mutable f_pm_addr : int;	(* address of public method *)
	mutable f_sentinel_addr : int;	(* address of sentinel *)
};;
	
type slt_indirect_xfer_table_info_t =
{
	mutable f_canonical_public_method : string;
	mutable sentinel_type : string;
	mutable f_table_offset : int;
	mutable fn_address : int;
};;



	@@basedefs_uobj@@

	(*TBA: basedefs *)
	(*--------------------------------------------------------------------------*)
	(* usbinformat.h constant defs; c.f. include/usbinformat.h for binary definitions *)
	(*--------------------------------------------------------------------------*)
	let def_USBINFORMAT_SECTION_TYPE_PADDING = 0x0;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ =	0x1;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJCOLL_ENTRYSENTINEL = 0x2;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ_RESUMESENTINEL = 0x3;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ_CALLEESENTINEL = 0x4;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ_EXITCALLEESENTINEL = 0x5;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ_HDR =	0x6;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ_CODE = 0x7;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ_RWDATA = 0x8;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ_RODATA = 0x9;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ_USTACK = 0xa;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ_TSTACK = 0xb;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ_USTACKTOS = 0xc;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ_TSTACKTOS = 0xd;;
	let def_USBINFORMAT_SECTION_TYPE_UOBJ_DMADATA = 0xe;;
